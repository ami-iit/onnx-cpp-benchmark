name: C++ CI Workflow

on:
  push:
  pull_request:
  schedule:
  # * is a special character in YAML so you have to quote this string
  # Execute a "nightly" build at 2 AM UTC
  - cron:  '0 2 * * *'

jobs:
  build:
    name: '[${{ matrix.os }}@conda]'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build_type: [Release]
        os: [ubuntu-latest, windows-2019, macos-latest]
      fail-fast: false

    steps:
    - uses: actions/checkout@v2

    - name: Install pixi [Linux&macOS]
      if: contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')
      shell: bash -l {0}
      run: |
        curl -fsSL https://raw.githubusercontent.com/prefix-dev/pixi/main/install/install.sh | bash
        echo "$HOME/.pixi/bin" >> $GITHUB_PATH

    - name: Install pixi [Windows]
      if: contains(matrix.os, 'windows')
      shell: pwsh
      run: |
        curl https://raw.githubusercontent.com/prefix-dev/pixi/main/install/install.ps1 -o install.ps1
        ./install.ps1
        "$env:LOCALAPPDATA\pixi\bin" >> $env:GITHUB_PATH

    - name: Build
      shell: bash -l {0}
      run: | 
        # Check version of pixi actually used
        pixi --version
        pixi run build
        
    - name: Run
      if: contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')
      run: | 
        # pixi run onnx-cpp-benchmark --help
        # manually running onnx-cpp-benchmark as a workaround for https://github.com/prefix-dev/pixi/issues/157
        ./.build/onnx-cpp-benchmark --help
 
    # Workaround for https://github.com/prefix-dev/pixi/issues/157
    - name: Setup for Run
      if: contains(matrix.os, 'windows')
      run: | 
        "D:\a\onnx-cpp-benchmark\onnx-cpp-benchmark\.pixi\env\Library\bin" >> $env:GITHUB_PATH

    - name: Run
      if: contains(matrix.os, 'windows')
      run: | 
        cd .build
        .\onnx-cpp-benchmark --help
